{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","cousor","marginRight","Contacts","Fragment","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","About","NotFound","App","basename","process","PUBLIC_url","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.754cb7c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n                ...state, \r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return {\r\n                ...state, \r\n                contacts: [action.payload,  ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n        return {\r\n                ...state, \r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value= {this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n    state= {\r\n        showContactInfo: false\r\n    };\r\n    onDeleteClick= async (id, dispatch) => {\r\n        try{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } catch(e) {\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n    };\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} <i onClick={() => \r\n                                this.setState({ showContactInfo: !this.state.showContactInfo })} className=\"fas fa-sort-down\"\r\n                                style={{cursor:'pointer'}}></i>\r\n                                <i className=\"fas fa-times\" style={{cursor: 'pointer', float:'right', color: 'red'}}\r\n                                onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                    style={{\r\n                                        cousor: 'pointer',\r\n                                        float:'right',\r\n                                        color: 'black',\r\n                                        marginRight: '1rem'\r\n                                    }}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : null}     \r\n                        </div>\r\n                     ) \r\n            }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                        { contacts.map(contact => ( \r\n                            <Contact \r\n                            key= {contact.id}\r\n                            contact= {contact} \r\n                            />\r\n                        )) }\r\n                    </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </Link>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i>\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                                Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"></i>\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({  \r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} className={classnames('form-control form-control-lg', {'is-invalid': error})} placeholder={placeholder} value={value} onChange={onChange}/>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone:  '',\r\n        errors: []\r\n    };\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if(name===''){\r\n            this.setState({errors: {name:'Name is required'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors: {email:'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors: {phone:'Phone is required'}});\r\n            return;\r\n        }\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone:  '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                \r\n                                <TextInputGroup\r\n                                    label= \"Name\"\r\n                                    name= \"name\"\r\n                                    placeholder= \"Enter Name...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label= \"Email\"\r\n                                    name= \"email\"\r\n                                    type=\"email\"\r\n                                    placeholder= \"Enter Email...\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label= \"Phone\"\r\n                                    name= \"phone\"\r\n                                    placeholder= \"Enter Phone...\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n                \r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone:  '',\r\n        errors: []\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if(name===''){\r\n            this.setState({errors: {name:'Name is required'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors: {email:'Email is required'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors: {phone:'Phone is required'}});\r\n            return;\r\n        }\r\n        \r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data})\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone:  '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                \r\n                                <TextInputGroup\r\n                                    label= \"Name\"\r\n                                    name= \"name\"\r\n                                    placeholder= \"Enter Name...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label= \"Email\"\r\n                                    name= \"email\"\r\n                                    type=\"email\"\r\n                                    placeholder= \"Enter Email...\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                <TextInputGroup\r\n                                    label= \"Phone\"\r\n                                    name= \"phone\"\r\n                                    placeholder= \"Enter Phone...\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n                \r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Provider } from './Context';\nimport NotFound from './components/pages/NotFound';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_url}>\n      <div className=\"App\">\n      <Header branding=\"Contact Manager\"/>\n      <div className=\"container\">\n       <Switch>\n         <Route exact path= \"/\" component= {Contacts}/>\n         <Route exact path= \"/contact/add\" component= {AddContact}/>\n         <Route exact path= \"/contact/edit/:id\" component= {EditContact}/>\n         <Route exact path= \"/about\" component= {About}/>\n         <Route component= {NotFound}/>\n       </Switch>\n      </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}